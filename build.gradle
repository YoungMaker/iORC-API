buildscript {
	ext {
		kotlinVersion = '1.2.21'
		springBootVersion = '1.5.10.RELEASE'
		gradleDockerVersion = '1.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")


		classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'

group = 'edu.ycp.cs482'
version = '0.0.1-dev'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}


jar {
	baseName = "api-iorc"
	group    = "edu.ycp.cs482.iorcapi"
	version  = "0.0.1-dev"
	manifest { attributes "Main-Class": "edu.ycp.cs482.IorcApiApplication" }
}

docker {


//	runCommand "apt-get update"

}

task buildDocker(type: Docker) {
	applicationName = "iorc-api"
	baseImage "frolvlad/alpine-oraclejdk8:slim"
	maintainer 'Aaron Walsh "awalsh6@ycp.edu"'
	//push = project.hasProperty('push')
	tag = 'iorc-api'
	addFile {
		from jar
		rename {'app.jar'}
	}
	entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
	exposePort(8081)
}

buildDocker.dependsOn(build)

repositories {
	mavenCentral()
}


ext {
	springBootAdminVersion = '1.5.7'
	springCloudVersion = 'Edgware.SR1'
}

dependencies {

	compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
	//this needs to be here for some reason otherwise bean registration fails
	compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2")

	compile('com.graphql-java:graphql-spring-boot-starter:4.0.0')

	compile('com.graphql-java:graphiql-spring-boot-starter:4.0.0')
	compile('com.graphql-java:graphql-java-tools:4.3.0')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('de.codecentric:spring-boot-admin-starter-client')
	compile('de.codecentric:spring-boot-admin-starter-server')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.retry:spring-retry')
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test')

	compile('com.mmnaseri.utils:spring-data-mock:1.1.4')

}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
